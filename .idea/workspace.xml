<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ded701ba-3186-42e3-91db-da785630d21f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/consistent_hash/consistent_hash.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/consistent_hash/consistent_hash_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/erasure-remove.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/erasure-transfer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/erasure_client_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/nodes.addr" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/protobuf/rpc.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/bwmarrin/snowflake/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/bwmarrin/snowflake/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/bwmarrin/snowflake/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/bwmarrin/snowflake/snowflake.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-client.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-encode.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-encode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-global.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-node.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-init.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-cluster.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-read.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-read.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-server.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-simFailure.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-simulator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/erasure-utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/erasure-utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/.travis.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-encode.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-errors.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-global.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-init.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-layout.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-read.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-recover.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-scaling.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-simFailure.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-update.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/DurantVivado/Grasure/erasure-utils.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="27mMT9aeRkeEnAky3IWxHfKwyef" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/consistent_hash" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/consistent_hash" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestClient_Call in github.com/DurantVivado/GrasureOL">
    <configuration name="TestClient_Call in github.com/DurantVivado/GrasureOL" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="GrasureOL" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/DurantVivado/GrasureOL" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestClient_Call\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestColor in github.com/DurantVivado/GrasureOL/xlog" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="GrasureOL" />
      <working_directory value="$PROJECT_DIR$/xlog" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/DurantVivado/GrasureOL/xlog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestColor\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServer_ServeConn in github.com/DurantVivado/GrasureOL" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="GrasureOL" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/DurantVivado/GrasureOL" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServer_ServeConn\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServer_Start in github.com/DurantVivado/GrasureOL" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="GrasureOL" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/DurantVivado/GrasureOL" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServer_Start\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSetLevel in github.com/DurantVivado/GrasureOL/xlog" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="GrasureOL" />
      <working_directory value="$PROJECT_DIR$/xlog" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/DurantVivado/GrasureOL/xlog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSetLevel\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestClient_Call in github.com/DurantVivado/GrasureOL" />
        <item itemvalue="Go Test.TestServer_ServeConn in github.com/DurantVivado/GrasureOL" />
        <item itemvalue="Go Test.TestServer_Start in github.com/DurantVivado/GrasureOL" />
        <item itemvalue="Go Test.TestColor in github.com/DurantVivado/GrasureOL/xlog" />
        <item itemvalue="Go Test.TestSetLevel in github.com/DurantVivado/GrasureOL/xlog" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/xlog/xlog_test.go</url>
          <line>14</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/erasure-server_test.go</url>
          <line>14</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/erasure_client_test.go</url>
          <line>12</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/erasure_client_test.go</url>
          <line>20</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/erasure-cluster.go</url>
          <line>190</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>